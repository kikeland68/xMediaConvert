<?xml version="1.0"?>

<!--
    
The purpose of this file is to represent the actions to be taken when the VideoMonkey GUI is manipulated. The GUI contains a list of files to be encoded. For each input file, information about it (size, bitrate, frame rate, etc.) is stored. When any change is made to the GUI (selecting a menu item, sliding a slider, checking a box, etc.) 

File Syntax
===========

The Command file contains an outer <videomonkey> element with one of each children:

 <default_device> - parameters used by any device when not overridden, with children:
     <quality> - set of stops for quality slider, with children:
         <quality_stop> - one quality stop, with attributes:
             title - the title of the tick mark
     <performance> - values for performance menu, with children:
         <performance_item> - one item in menu, with attributes and children:
             title - title of this item in menu
             <param>, <command>, <script> - see below
     <param>, <command>, <script> - see below
         
 <devices> - List of devices in device menu, with children:
     <device_group> - A grouping of devices. Each groups has a title and groups are separated by a line, 
                      with attributes and children:
         title - title for this group
         <common_device> - features common to all devices in this group, with same children as <default_device>
         <device> - device in this group, with same children as <default_device> and additional attributes and children:
             title - title for this device
             icon - name of the icon image to use for this device
             enabled - whether or not this device is enabled in the device list (true | false)
             <checkbox> - this describes a checkbox, with attributes and children:
                 which - which checkbox (0-n)
                 title - title on the checkbox
                 enabled - whether or not this checkbox is enabled (true | false)
                 <checked_item> - parameters used when this checkbox is checked, with children:
                     <param>, <command>, <script> - see below
                 <unchecked_item> - parameters used when this checkbox is not checked, with children:
                     <param>, <command>, <script> - see below
             <menu> - this describes a menu, with children:
                 which - which menu (0-n)
                 title - title on the menu
                 enabled - whether or not this menu is enabled (true | false)
                 <menu_item> - one entry in the menu, with attributes and children:
                     title - title of this menu item
                     <param>, <command>, <script> - see below
                 <unchecked_item> - parameters used when this checkbox is not checked, with children:
                     <param>, <command>, <script> - see below
            <param>, <command>, <script> - see below

<script> element
================

Wherever a script element is allowed, there can be 0 or more. If more than one, all scripts are concatenated and executed as one. Scripts have access to the normal JavaScript objects (Object, String, Array, etc.). In addition, there is a log() function which takes 0 or more parameters, each of which is converted to a string and output to the console. After all strings of a log() function are printed, a newline is printed. Log entries are prefixed for identification.

<param> element
===============

Wherever a param element is allowed, there can be 0 or more. Each element adds a property to the 'params' property whose property name is obtained from the 'id' attribute and whose property value is obtained from the 'value' attribute.

<command> element
=================

Wherever a command element is allowed, there can be 0 or more. Commands are just like params except that the property value is the contents of the element, rather than the 'value' attribute. All newline characters are stripped from the content string, as are any leading of trailing whitespace characters.

Execution
=========

The workhorse elements are the <param>, <command>, <script>. These contain the instructions which ultimately lead to a recipe to use for the encoding job. In general params and commands are added to the JavaScript 'params' object in one pass. And then the scripts are executed in a separate pass. So even later defined params and commands are accessible to earlier scripts. Scripts are executed according to the elements which contain them in the following order:

    1) selected <performance_item> from <default_device>
    2) <default_device>
    3) selected <performance_item> from <common_device> for selected <device>
    4) <common_device> for selected <device>
    5) selected <performance_item> from selected <device>
    6) <checked_item> or <unchecked_item> entry from each <checkbox> in selected <device>
    7) selected <menu_item> entry from each <menu> in selected <device>
    8) selected <device>
    
The result of this script execution is a string in 'params.recipe' which is the recipe to be executed. See below for recipe syntax. These scripts are executed when any UI control is changed. This includes the slider, which executes the scripts for each move. The script is executed in turn for each file selected for encoding. This pass of script execution is to fill in the file list entries. When encoding is started, the scripts are executed again for the currently encoding file and the recipe is used to start the encoding. Once encoding is finished, the scripts are executed for the next file, and so on.

Javascript Params
=================

Each time scripts execute, a number of parameters are preloaded into the 'params' property. These are:

Param Name              Value
==========              =====

ffmpeg                  ffmpeg command path
qt_export               qt_export command path (used to extract audio from some file types)
movtoy4m                movtoy4m command path (used to extract video from some file types)
yuvadjust               yuvadjust command path (used to adjust video saturation, hue, etc.)
yuvcorrect              yuvcorrect command path (used to perform color correction on raw yuv data)

input_file              Current input file path
output_file             Current output file path
tmp_audio_file          Path to a temp file to which audio can be saved
pass_log_file           Path to the ffmpeg pass log file, used for 2 pass encoding
input_video_width       Width, in pixels, of the input file
input_video_height      Height, in pixels, of the input file
input_frame_rate        Frame rate, in fps, of the input file
input_video_bitrate     Bitrate of the video in the input file
input_video_aspect      Video aspect ratio (may be different from width/height for non-square pixels)
input_video_codec       Name of the video codec of the input file

is_quicktime            "true" if the input file is quicktime
has_audio               "true" if the input file contains an audio track

quality                 The current setting of the quality slider (0-1 between tick marks)
quality_stop            Which tick mark is currently to the left of the slider (0 to #ticks-1)
title                   Title of the currently selected device

limit_output_params     "true" if output params should be limited to be no larger than input

num_cpus                Number of CPUs to use during encoding

After executing all the scripts (see Execution) the system expects the following properties to be set in the 'params' property:

Param Name              Value
==========              =====

recipe                  Recipe to use for the current encoding
output_video_width      Width, in pixels, of the output file
output_video_height     Height, in pixels, of the output file
audio_quality           A string indicating the audio quality of the output file (usually "low", "medium" or "high")
output_video_bitrate    Approximate bitrate of the output video

output_format_name      Displayed format of the container
output_video_codec_name Displayed video codec
output_video_profile_name Displayed profile of the video
output_video_level_name Displayed level of this video
output_video_frame_rate Framerate of the output file (actual frame rate in fps * 1000)

output_audio_codec_name Displayed audio codec
output_audio_bitrate    Audio bitrate
output_audio_sample_rate Sample rate of audio
output_audio_channels   Number of channels of audio

The recipe is used for the actual encoding, the others are used to update the file entries.

Recipes 
=======

A recipe is essentially a shell script to be passed to /bin/sh. A param (from the global 'params' object) can be included with a '$' followed by the property name. For instance if there were a 'params.foo' property with the value "very nice", then the recipe "This is a $foo command" would translate to "This is a very nice command". To include a literal '$' simply use two consecutively ('$$'). 

A property name is anything from the character after the '$' to the next whitespace character. Or you can use parantheses around the property name to concatenate with non-whitespace characters. For instance "This is the $(foo)st command" would translate to "This is the very nicest command".

-->

<!-- 
<!DOCTYPE videomonkey [
    <!ELEMENT videomonkey    (default_device|devices)*>
    <!ELEMENT script    (#PCDATA)>
    <!ELEMENT param    EMPTY>
        <!ATTLIST param id CDATA "">
        <!ATTLIST param value CDATA "">
    <!ELEMENT default_device    (quality|performance|script|param|command)*>
    <!ELEMENT common_device     (quality|performance|script|param|command)*>
    <!ELEMENT devices    (device_group*)>
    <!ELEMENT command    (#PCDATA)>
        <!ATTLIST command id CDATA "">
    <!ELEMENT quality    (quality_stop*)>
    <!ELEMENT quality_stop  EMPTY>
        <!ATTLIST quality_stop title CDATA "">
    <!ELEMENT performance    (performance_item*)>
    <!ELEMENT performance_item    (script|param|command)*>
        <!ATTLIST performance_item title CDATA "">
    <!ELEMENT device_group    (common_device?,device*)>
        <!ATTLIST device_group title CDATA "">
    <!ELEMENT device    (quality|performance|script|param|command|checkbox|menu)*>
        <!ATTLIST device title CDATA "">
        <!ATTLIST device icon CDATA "">
        <!ATTLIST device enabled CDATA "">
    <!ELEMENT checkbox    (checked_item|unchecked_item)*>
        <!ATTLIST checkbox which CDATA "">
        <!ATTLIST checkbox title CDATA "">
        <!ATTLIST checkbox enabled CDATA "">
     <!ELEMENT checked_item    (script|param|command)*>
    <!ELEMENT unchecked_item    (script|param|command)*>
    <!ELEMENT menu    (menu_item*)>
        <!ATTLIST menu which CDATA "">
        <!ATTLIST menu title CDATA "">
        <!ATTLIST menu enabled CDATA "">
     <!ELEMENT menu_item    (script|param|command)*>
        <!ATTLIST menu_item title CDATA "">
]>
-->

<videomonkey>
    <default_device>
        <command id="ffmpeg_single_pass_options">
            -vpre $ffmpeg_vpre $ffmpeg_profile
        </command>
        <command id="ffmpeg_pass1_options">
            -vpre $ffmpeg_vpre_pass1 -pass 1 -passlogfile "$pass_log_file" $ffmpeg_profile
        </command>
        <command id="ffmpeg_pass2_options">
            -vpre $ffmpeg_vpre -pass 2 -passlogfile "$pass_log_file" $ffmpeg_profile
        </command>
        <command id="ffmpeg_normal"> $ffmpeg -threads $num_cpus -y -i "$input_file" </command>
		<!-- Added by ebj -->
		<command id="ffmpeg_thumbnail"> $ffmpeg -y -i "$output_file" </command>
		<!-- End addition -->
        <command id="yuv_to_ffmpeg_av"> $ffmpeg -threads $num_cpus -y -i - -i "$tmp_audio_file" </command>
        <command id="yuv_to_ffmpeg_v"> $ffmpeg -threads $num_cpus -y -i - </command>
        <command id="quicktime_av_single_pass">
            $quicktime_to_yuv | $yuv_to_ffmpeg_av $ffmpeg_options $ffmpeg_single_pass_options "$output_file"
        </command>
        <command id="quicktime_av_pass1"> 
            $quicktime_to_yuv | $yuv_to_ffmpeg_av $ffmpeg_options $ffmpeg_pass1_options "$output_file" 
        </command>
        <command id="quicktime_av_pass2">
            $quicktime_to_yuv | $yuv_to_ffmpeg_av $ffmpeg_options $ffmpeg_pass2_options "$output_file"
        </command>
        <command id="quicktime_v_single_pass"> 
            $quicktime_to_yuv | $yuv_to_ffmpeg_v $ffmpeg_options $ffmpeg_single_pass_options "$output_file"
        </command>
        <command id="quicktime_v_pass1">
            $quicktime_to_yuv | $yuv_to_ffmpeg_v $ffmpeg_options $ffmpeg_pass1_options "$output_file"
        </command>
        <command id="quicktime_v_pass2">
            $quicktime_to_yuv | $yuv_to_ffmpeg_v $ffmpeg_options $ffmpeg_pass2_options "$output_file"
        </command>
        <command id="normal_pass1">
            $ffmpeg_normal $ffmpeg_options $ffmpeg_pass1_options "$output_file"
        </command>
        <command id="normal_pass2">
            $ffmpeg_normal $ffmpeg_options $ffmpeg_pass2_options "$output_file"
        </command>
        <command id="normal_single_pass">
            $ffmpeg_normal $ffmpeg_options $ffmpeg_single_pass_options "$output_file"
        </command>
        <script>
            <![CDATA[
            
             function caseInsensitiveCompare(a,b) { return a.toLowerCase() == b.toLowerCase() }
            
            function audio(type)
            {
                switch(type) {
                    case "low":
                        params.output_audio_bitrate =  16000;
                        params.output_audio_sample_rate = 11025;
                        params.output_audio_channels = 1;
                        params.audio_quality = "Low";
                        break;
                    case "medium":
                        params.output_audio_bitrate =  32000;
                        params.output_audio_sample_rate = 22050;
                        params.output_audio_channels = 1;
                        params.audio_quality = "Medium";
                        break;
                    case "high":
                        params.output_audio_bitrate = 128000;
                        params.output_audio_sample_rate = 48000;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                    case "avi":
                        params.output_audio_bitrate = 128000;
                        params.output_audio_sample_rate = 48000;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                    case "mp4Low":
                        params.output_audio_bitrate =  12000;
                        params.output_audio_sample_rate = 11025;
                        params.output_audio_channels = 1;
                        params.audio_quality = "Low";
                        break;
                    case "wmv":
                        params.output_audio_bitrate =  128000;
                        params.output_audio_sample_rate = 44100;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                    case "wmvlow":
                        params.output_audio_bitrate =  24000;
                        params.output_audio_sample_rate = 11025;
                        params.output_audio_channels = 1;
                        params.audio_quality = "Low";
                        break;
                }
            }
            
            function mpegaudio(type)
            {
                
                switch(type) {
                    case "low":
                        params.output_audio_bitrate =  32000;
                        params.output_audio_sample_rate = 22050;
                        params.output_audio_channels = 1;
                        params.audio_quality = "Low";
                        break;
                    case "high":
                        params.output_audio_bitrate =  128000;
                        params.output_audio_sample_rate = 48000;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                    case "vcd":
                        params.output_audio_bitrate = 224000;
                        params.output_audio_sample_rate = 44100;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                    case "svcd":
                        params.output_audio_bitrate = 224000;
                        params.output_audio_sample_rate = 48000;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                    case "hd":
                        params.output_audio_bitrate = 192000;
                        params.output_audio_sample_rate = 48000;
                        params.output_audio_channels = 2;
                        params.audio_quality = "High";
                        break;
                }
            }
            
            function bool(v)
            {
                if (typeof(v) == "number")
                    return v != 0;
                if (typeof(v) == "boolean")
                    return v;
                if (typeof(v) == "string")
                    return v != "false" && v != "";
                return false;
            }
            
            function number(v)
            {
                if (typeof(v) == "number")
                    return v;
                if (typeof(v) == "boolean")
                    return v ? 1 : 0;
                if (typeof(v) == "string")
                    return parseFloat(v);
                return 0;
            }
            
            function standardizeVideoCodecName(name)
            {
                if (caseInsensitiveCompare(name, "vc-1"))
                    return "wmv3";
                if (caseInsensitiveCompare(name, "avc") || caseInsensitiveCompare(name, "avc1"))
                    return "h.264";
                return name;
            }
            
            function adjustVideoParams()
            {
                params.special_qt = params.is_quicktime == "true" && params.input_video_codec == "wmv3";
            
                // set the frame rate
                params.frame_rate = 1;
                if (params.title != "Apple TV" && number(params.quality_stop) == 0)
                    params.frame_rate = 0.5;

                params.output_video_frame_rate = params.input_frame_rate * params.frame_rate;
                
                // All devices have a max frame rate of 30fps
                if (params.output_video_frame_rate > 30)
                    params.output_video_frame_rate = 30;
                
                // Set output frame size
                var inputWidth = params.input_video_width;
                var inputHeight = params.input_video_height;
                var inputAspect = inputWidth / inputHeight;
                if (Math.abs(inputAspect - params.input_video_aspect) > 0.01) {
                    if (inputAspect < params.input_video_aspect) {
                        // stretch horizontally
                        inputWidth = inputHeight * params.input_video_aspect;
                    }
                    else {
                        // stretch vertically
                        inputHeight = inputWidth / params.input_video_aspect;
                    }
                }
                
                // adjust for limit_output_params
                if (bool(params.limit_output_params)) {
                    if (params.frame_width > inputWidth || params.frame_height > inputHeight) {
                        params.frame_width = inputWidth;
                        params.frame_height = inputHeight;
                    }
                    
                    if (params.output_video_bitrate > params.input_video_bitrate)
                        params.output_video_bitrate = params.input_video_bitrate;
                }
                
                // Adjust frame rate and frame size based on format_limits for Apple TV
                if (params.title == "Apple TV") {
                    if (params.format_limits == "24fps") {
                        if (params.frame_width > 960 || params.frame_height > 540) {
                            if (params.output_video_frame_rate > 24)
                                params.output_video_frame_rate = 24;
                            if (params.frame_width > 1280)
                                params.frame_width = 1280;
                            if (params.frame_height > 1024)
                                params.frame_height = 1024;
                        }
                    }
                    else {
                        if (params.output_video_frame_rate > 30)
                            params.output_video_frame_rate = 30;
                        if (params.frame_width > 960)
                            params.frame_width = 960;
                        if (params.frame_height > 540)
                            params.frame_height = 540;
                    }
                }
                
                if(params.title == "MPEG" && params.profile != "none" || params.title == "PSP") {
                
                }else{
                    // adjust video frame size
                    inputAspect = inputWidth / inputHeight;

                    var requestedAspect = params.frame_width / params.frame_height;
                    
                    if (inputAspect > requestedAspect) {
                        // shorten height
                        params.output_video_width = params.frame_width;
                        params.output_video_height = params.frame_width / inputAspect;
                    }
                    else {
                        // shorten width
                        params.output_video_height = params.frame_height;
                        params.output_video_width = params.frame_height * inputAspect;
                    }
                    
                    // Make frame size divisible by 16
                    params.output_video_width = Math.round(params.output_video_width / 16) * 16;
                    params.output_video_height = Math.round(params.output_video_height / 16) * 16;
                }
                
                // One more problem. If we are frame size limited (Apple TV) then 
                // rounding could have pushed us over that limit.
                // We need to make sure the width and height
                // are below the maximums.
                if (params.title == "Apple TV") {
                    if (params.format_limits == "24fps") {
                        if (params.output_video_width > 1280)
                            params.output_video_width -= 16;
                        if (params.output_video_height > 1024)
                            params.output_video_height -= 16;
                    }
                    else {
                        if (params.output_video_width > 960)
                            params.output_video_width -= 16;
                        if (params.output_video_height > 540)
                            params.output_video_height -= 16;
                    }
                }

                //params.ffmpeg_vcodec = bool(params.h264) ? "libx264" : "mpeg4";
                params.output_video_codec_name = bool(params.h264) ? "H.264" : "MPEG-4"
                params.output_audio_codec_name = "AAC";
                
                
                // adjust vpre for baseline if needed
                // FIXME: For some reason, creating anything other than baseline does not work
                // on Apple TV. This seems to have something to do with VFR of the input source?
                // For now always use baseline
                //if (title != "Apple TV")
                params.ffmpeg_profile = "-bf 0 -coder 0 -flags2 -wpred-dct8x8";
            }
            
            audio("high");
            
            adjustVideoParams();
           
            ]]>
        </script>
        <quality>
            <quality_stop title="Peor" />
            <quality_stop title="Baja" />
            <quality_stop title="Normal" />
            <quality_stop title="Alta" />
            <quality_stop title="Mejor" />
        </quality>
        <performance>
            <performance_item title="La más rápida">
                <param id="is_2_pass" value="false" />
                <param id="ffmpeg_vpre" value="fastest" />
                <param id="ffmpeg_profile" value="-bf 1" />
            </performance_item>
            <performance_item title="Rápida">
                <param id="is_2_pass" value="false" />
                <param id="ffmpeg_vpre" value="default" />
                <param id="ffmpeg_profile" value="-bf 1" />
            </performance_item>
            <performance_item title="Normal">
                <param id="is_2_pass" value="false" />
                <param id="ffmpeg_vpre" value="normal" />
                <param id="ffmpeg_profile" value="-bf 4" />
            </performance_item>
            <performance_item title="Normal (2 pasadas)">
                <param id="is_2_pass" value="true" />
                <param id="ffmpeg_vpre" value="normal" />
                <param id="ffmpeg_vpre_pass1" value="normal-pass1" />
                <param id="ffmpeg_profile" value="-bf 4" />
             </performance_item>
            <performance_item title="Alta calidad">
                <param id="is_2_pass" value="false" />
                <param id="ffmpeg_vpre" value="hq" />
                <param id="ffmpeg_profile" value="-bf 16" />
            </performance_item>
            <performance_item title="Alta calidad (2 pasadas)">
                <param id="is_2_pass" value="true" />
                <param id="ffmpeg_vpre" value="hq" />
                <param id="ffmpeg_vpre_pass1" value="hq-pass1" />
                <param id="ffmpeg_profile" value="-bf 16" />
           </performance_item>
        </performance>
        <param id="ffmpeg_vcodec" value="libx264" />
        <param id="ffmpeg_acodec" value="libfaac" />
        <param id="video_suffix" value="mp4" />
    </default_device>
    
    <devices>
    
        <!--
        
            iTunes Group
            
        -->
        <device_group title="iTunes">
            <common_device>
                <command id="ffmpeg_options">
                    -vcodec $ffmpeg_vcodec -b $output_video_bitrate -s $(output_video_width)x$(output_video_height) 
                        -aspect $(output_video_width):$(output_video_height) -r $(output_video_frame_rate)
                    -async 50 -acodec $ffmpeg_acodec -ab $output_audio_bitrate -ar $output_audio_sample_rate 
                        -ac $output_audio_channels
                </command>
                <command id="quicktime_to_audio_file">
                    $qt_export "$input_file" --video=0 "$tmp_audio_file"
                </command>
                <command id="correct_yuv">
                    $yuvcorrect -v 0 -Y LUMINANCE_1.20_0_255_0_255 -Y CHROMINANCE_0_1.04_128_1.04_128_0_255
                </command>
                <command id="quicktime_to_yuv">
                    $movtoy4m -f -w $input_video_width -h $input_video_height -F $(output_video_frame_rate) 
                        -a $(output_video_width):$(output_video_height) "$input_file" | $correct_yuv 
                </command>
                <script>
                    <![CDATA[
    
                    // At this point, we know what 2 quality stops we are between (params.quality_stop 
                    // and params.quality_stop+1) and we know what percentage of the way between the 
                    // two we are (params.quality). We also which device we have selected 
                    // (params.title), whether we are doing h.264 or mpeg4 (params.h264), and whether 
                    // we want to optimize for TV or iPod (params.for_tv). From this we need to 
                    // compute params.frame_width, params.frame_height, params.audio_quality and
                    // params.output_video_bitrate.
                    
                    // We support a number of standard frame sizes. After adjusting these sizes according to the flags
                    // (h264, forTV), we determine the actual frame size using these as maximum values, taking
                    // into account aspect ratio.
                    
                    params.output_format_name = "MPEG-4";
                    
                    var frameSizes = {
                        "tiny":  [  192,  144 ],
                        "small": [  320,  240 ],
                        "iphone":[  480,  320 ],
                        "sdef":  [  640,  480 ],
						"ipad":  [ 1280,  720 ],
                        "idef":  [ 1280,  720 ],
                        "hdef":  [ 1920, 1080 ]
                    };
                    
                    var deviceFrameSizeMap = {
                        //                              0           1           2           3           4
                        "Dispositivos Apple":
                        [
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],   // mp4 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],   // mp4 && for TV
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],   // h.264 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ]    // h.264 && for TV
                        ], 
                        "iPod":
                        [
                            [   "tiny",     "small",    "small",    "small",    "small" ],  // mp4 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],   // mp4 && for TV
                            [   "tiny",     "small",    "small",    "small",    "small" ],  // h.264 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ]    // h.264 && for TV
                        ], 
                        "iPhone":
                        [
                            [   "tiny",     "small",    "iphone",   "iphone",   "iphone" ], // mp4 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],   // mp4 && for TV
                            [   "tiny",     "small",    "iphone",   "iphone",   "iphone" ], // h.264 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ]    // h.264 && for TV
                        ], 
                        "iPod touch":
                        [
                            [   "tiny",     "small",    "iphone",   "iphone",   "iphone" ], // mp4 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],   // mp4 && for TV
                            [   "tiny",     "small",    "iphone",   "iphone",   "iphone" ], // h.264 && for iPod
                            [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ]    // h.264 && for TV
                        ], 
                        "Apple TV":
                        [
                            [   "sdef",     "sdef",     "sdef",     "sdef",     "sdef" ],    // mp4 && for iPod
                            [   "sdef",     "sdef",     "sdef",     "sdef",     "sdef" ],   // mp4 && for TV
                            [   "idef",     "idef",     "idef",     "idef",     "idef" ],   // h.264 && for iPod
                            [   "idef",     "idef",     "idef",     "idef",     "idef" ]    // h.264 && for TV
                        ],
						"iPad":
                        [
                            [   "sdef",     "sdef",     "sdef",     "sdef",     "sdef" ],   // mp4 && for iPod
                            [   "sdef",     "sdef",     "sdef",     "sdef",     "sdef" ],   // mp4 && for TV
                            [   "ipad",     "ipad",     "ipad",     "ipad",     "ipad" ],   // h.264 && for iPod
                            [   "ipad",     "ipad",     "ipad",     "ipad",     "ipad" ]    // h.264 && for TV
                        ]
                    };
                    
                    var bitrateQualityMap = {
                        //                          mp4                                    h.264
                        "Dispositivos Apple":
                            [ [ 300,  450,  600, 1000, 1800, 2500 ], [ 300,  450,  600, 1000, 1200, 1500 ] ], 
                        "iPod":
                            [ [ 300,  450,  300,  700, 1500, 2500 ], [ 300,  450,  300,  700, 1000, 1500 ] ], 
                        "iPhone":
                            [ [  60,  150,  300,  700, 1500, 2500 ], [  60,  150,  300,  700, 1000, 1500 ] ], 
                        "iPod touch":
                            [ [ 300,  450,  300,  700, 1500, 2500 ], [ 300,  450,  300,  700, 1000, 1500 ] ], 
                        "Apple TV":
                            [ [ 500, 1000, 1500, 2000, 2500, 3000 ], [ 500, 1000, 1500, 2500, 3750, 5000 ] ],
						"iPad":
                            [ [ 500, 1000, 1500, 2000, 2500, 3000 ], [ 500, 1000, 1500, 2500, 3750, 5000 ] ]
                    };
                    
                    var audioQualityMap = {
                        //                          0           1           2           3           4
                        "Dispositivos Apple":    [   "low",      "high",     "high",     "high",     "high" ],
                        "iPod":                 [   "low",      "high",     "high",     "high",     "high" ],
                        "iPhone":               [   "low",      "medium",   "high",     "high",     "high" ],
                        "iPod touch":           [   "low",      "high",     "high",     "high",     "high" ],
                        "Apple TV":             [   "high",     "high",     "high",     "high",     "high" ],
						"iPad":                 [   "low",      "high",     "high",     "high",     "high" ]
                    };
                    
                    var levelMap = {
                        //                          0   1   2   3   4
                        "Dispositivos Apple":    [   20, 30, 30, 30, 30 ],
                        "iPod":                 [   20, 30, 30, 30, 30 ],
                        "iPhone":               [   20, 30, 30, 30, 30 ],
                        "iPod touch":           [   20, 30, 30, 30, 30 ],
                        "Apple TV":             [   31, 31, 31, 31, 31 ],
						"iPad":                 [   20, 30, 30, 30, 30 ]
                    };

                    var title = params.title;
                    var qualityStop = number(params.quality_stop);
                    var quality = number(params.quality);
                    var h264 = bool(params.h264);
                    var forTV = bool(params.forTV);
                    
                    // set bitrate
                    var bitrateMin = bitrateQualityMap[title][h264 ? 1 : 0][qualityStop] * 1000;
                    var bitrateMax = bitrateQualityMap[title][h264 ? 1 : 0][qualityStop+1] * 1000;
                    params.output_video_bitrate = (bitrateMax - bitrateMin) * quality + bitrateMin;
                    
                    // set frame size
                    var index = (h264 ? 2 : 0) + (forTV ? 1 : 0);
                    var sizeString = deviceFrameSizeMap[title][index][qualityStop];
                    params.frame_width = frameSizes[sizeString][0];
                    params.frame_height = frameSizes[sizeString][1];
                        
                    adjustVideoParams();
                    
                    // set audio quality
                    audio(audioQualityMap[title][qualityStop]);
                        
                    // The level is not necessarily accurate
                    params.output_video_profile_name = (title != "Apple TV") ? "baseline" : "main";
                    params.output_video_level_name = levelMap[title][qualityStop];

                    // construct the recipe
                    if (     !bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$normal_single_pass";
                    else if (!bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$normal_pass1 ; $normal_pass2";
                    else if (!bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$normal_single_pass";
                    else if (!bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$normal_pass1 ; $normal_pass2";
                    else if (bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$quicktime_v_single_pass";
                    else if (bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$quicktime_v_pass1 ; $quicktime_v_pass2";
                    else if (bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$quicktime_to_audio_file ; $quicktime_av_single_pass";
                    else if (bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$quicktime_to_audio_file ; $quicktime_av_pass1 ; $quicktime_av_pass2";

                    ]]>
                </script>
            </common_device>
            <!-- Dispositivos Apple -->
            <device title="Dispositivos Apple" icon="itunesfile">
                 <checkbox which="0" title="H.264 Video">
                    <checked_item>
                            <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="h264" value="true" />
                    </unchecked_item>
                </checkbox>
            </device>
            
            <!-- iPod -->
            <device title="iPod" icon="ipod">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="h264" value="true" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPod Screen">
                        <param id="forTV" value="false" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="forTV" value="true" />
                    </menu_item>
                </menu>
            </device>
            
            <!-- iPhone -->
            <device title="iPhone" icon="iphone">
                <quality>
                    <quality_stop title="Baja" />
                    <quality_stop title="3G" />
                    <quality_stop title="WiFi" />
                    <quality_stop title="Alta" />
                    <quality_stop title="Mejor" />
                </quality>
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="h264" value="true" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPod Screen">
                        <param id="forTV" value="false" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="forTV" value="true" />
                    </menu_item>
                </menu>
            </device>
            
            <!-- iPod touch -->
            <device title="iPod touch" icon="iphone">
                <quality>
                    <quality_stop title="Muy baja" />
                    <quality_stop title="Baja" />
                    <quality_stop title="WiFi" />
                    <quality_stop title="Alta" />
                    <quality_stop title="Mejor" />
                </quality>
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="h264" value="true" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPod Screen">
                        <param id="forTV" value="false" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="forTV" value="true" />
                    </menu_item>
                </menu>
             </device>
			 
			 <!-- iPad -->
            <device title="iPad" icon="iPad">
                <menu which="0" title="Format Limits:">
                    <menu_item title="1280x720@30fps">
                        <param id="format_limits" value="30fps" />
                    </menu_item>
                    <menu_item title="1024x768@24fps">
                        <param id="format_limits" value="24fps" />
                    </menu_item>
                </menu>
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="h264" value="true" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="1" title="Dejar pista de sonido" enabled="false">
                    <checked_item>
                        <param id="keep_surround_track" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="keep_surround_track" value="false" />
                    </unchecked_item>
                </checkbox>
            </device>


            
            <!-- Apple TV -->
            <device title="Apple TV" icon="appletv">
                <menu which="0" title="Format Limits:">
                    <menu_item title="1024x720@24fps">
                        <param id="format_limits" value="24fps" />
                    </menu_item>
                    <menu_item title="960x540@30fps">
                        <param id="format_limits" value="30fps" />
                    </menu_item>
                </menu>
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="h264" value="true" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="1" title="Dejar pista de sonido" enabled="false">
                    <checked_item>
                        <param id="keep_surround_track" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="keep_surround_track" value="false" />
                    </unchecked_item>
                </checkbox>
            </device>
         </device_group>


        <!--
        
            Video Devices Group
            
        -->
        <device_group title="Video Devices">
            <common_device>
                <command id="ffmpeg_options">
                    -ar $output_audio_sample_rate -vcodec $ffmpeg_vcodec  -r $(video_frame_rate)
                    -s $(output_video_width)x$(output_video_height) $aspect  $pix_fmt  -async 50
                    -acodec $ffmpeg_acodec $forceFormat
                </command>
                <command id="quicktime_to_audio_file">
                    $qt_export "$input_file" --video=0 "$tmp_audio_file"
                </command>
                <command id="correct_yuv">
                    $yuvcorrect -v 0 -Y LUMINANCE_1.20_0_255_0_255 -Y CHROMINANCE_0_1.04_128_1.04_128_0_255
                </command>
                <command id="quicktime_to_yuv">
                    $movtoy4m -f -w $input_video_width -h $input_video_height -F $(output_video_frame_rate) 
                        -a $(output_video_width):$(output_video_height) "$input_file" | $correct_yuv 
                </command>
                 <script>
                    <![CDATA[
    
                    // At this point, we know what 2 quality stops we are between (params.quality_stop and params.quality_stop+1)
                    // and we know what percentage of the way between the two we are (params.quality). We also which device we have 
                    // selected (params.title), whether we are doing h.264 or mpeg4 (params.h264), and whether we want to optimize 
                    // for TV or iPod (params.for_tv). From this we need to compute params.frame_width, params.frame_height,
                    // params.audio_quality and params.output_video_bitrate.
                    
                    // We support a number of standard frame sizes. After adjusting these sizes according to the flags
                    // (h264, forTV), we determine the actual frame size using these as maximum values, taking
                    // into account aspect ratio.
                    var frameSizes = {
                        "tiny":  [  192,  144 ],
                        "small": [  320,  240 ],
                        "iphone":[  480,  320 ],
                        "sdef":  [  720,  480 ],
                        "idef":  [ 1280,  720 ],
                        "hdef":  [ 1920, 1080 ]
                    };
                    
                    var deviceFrameSizeMap = {
                        //                              0           1           2           3           4
                        "DV":                   [   [   "tiny",     "small",    "small",    "small",    "small" ],
                                                    [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ],
                                                    [   "tiny",     "small",    "small",    "small",    "small" ],
                                                    [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ] ]
                    };
                    
                    var bitrateQualityMap = {
                        //                          mp4                                    h.264 
                        "DV":                   [ [ 300,  450,  300,  700, 1500, 2500 ], [ 300,  450,  300,  700, 1000, 1500 ] ],
						"DVD":                  [ [ 300,  450,  300,  700, 1500, 2500 ], [ 300,  450,  300,  700, 1000, 1500 ] ]
                    };
                    
                    var audioQualityMap = {
                        //                          0           1           2           3           4
                        "DV":                   [   "low",      "high",     "high",     "high",     "high" ],
						"DVD":                  [   "low",      "high",     "high",     "high",     "high" ]
                    };
                    
                    var levelMap = {
                        //                          0   1   2   3   4
                        "DV":                   [   20, 30, 30, 30, 30 ],
						"DVD":                  [   20, 30, 30, 30, 30 ]
                    };

                    var title = params.title;
                    var qualityStop = number(params.quality_stop);
                    var quality = number(params.quality);
                    var region = bool(params.format);
                    var forTV = bool(params.forTV);
                    
                    // set bitrate
                    var bitrateMin = bitrateQualityMap[title][1][qualityStop] * 1000;
                    var bitrateMax = bitrateQualityMap[title][1][qualityStop+1] * 1000;
                    params.output_video_bitrate = "-b "+((bitrateMax - bitrateMin) * quality + bitrateMin);
                        
                    adjustVideoParams();

                    // set endoder
                    
                    params.ffmpeg_vcodec = "dvvideo";
                    params.output_video_codec_name = "DV"
                        
                    // The level is not necessarily accurate
                    params.output_video_profile_name = (title != "Apple TV") ? "baseline" : "main";
                    params.output_video_level_name = levelMap[title][qualityStop];

                    // construct the recipe
                    if (     !bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$normal_single_pass";
                    else if (!bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$normal_pass1 ; $normal_pass2";
                    else if (!bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$normal_single_pass";
                    else if (!bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$normal_pass1 ; $normal_pass2";
                    else if (bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$quicktime_v_single_pass";
                    else if (bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$quicktime_v_pass1 ; $quicktime_v_pass2";
                    else if (bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$quicktime_to_audio_file ; $quicktime_av_single_pass";
                    else if (bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$quicktime_to_audio_file ; $quicktime_av_pass1 ; $quicktime_av_pass2";

                    ]]>
                </script>
            </common_device>
            <!-- DV -->
            <device title="DV" icon="dv" enabled="true">
                <param id="ffmpeg_acodec" value="pcm_s16le" />
                <param id="output_audio_channels" value="2" />
                <param id="ffmpeg_vcodec" value="dvvideo" />
                <param id="output_format_name" value="DV" />
                <param id="output_video_width" value="$input_video_width" />
                <param id="output_video_heigth" value="$input_video_heigth" />
                <param id="output_audio_bitrate" value="48000" />
                <param id="video_suffix" value="dv" />
                <param id="output_video_codec_name" value="DV" />
                <param id="output_audio_codec_name" value="PCM" />
                <checkbox which="0" title="Force Anamorphic 16:9">
                    <checked_item>
                        <param id="aspect" value="-aspect 16:9" />
                    </checked_item>
                    <unchecked_item>
                        <param id="aspect" value="-aspect 3:2" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="1" title="Ready for Final Cut">
                    <checked_item>
                        <param id="forceFormat" value="-f mov" />
                    </checked_item>
                    <unchecked_item>
                        <param id="forceFormat" value="" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Format:">
                    <menu_item title="NTSC">
                        <param id="video_frame_rate" value="ntsc" />
                        <param id="pix_fmt" value="-pix_fmt yuv411p" />
                        <param id="input_video_height" value="480" />
                    </menu_item>
                    <menu_item title="PAL">
                        <param id="video_frame_rate" value="pal" />
                        <param id="pix_fmt" value="-pix_fmt yuv420p" />
                        <param id="input_video_height" value="576" />
                        <param id="aspect" value="" />
                    </menu_item>
                </menu>
                <quality>
                    <quality_stop title="Muy baja" />
                </quality>
            </device>
            
            <!-- DVD -->
            <device title="DVD" icon="cd" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>
            
            <!-- Tivo Series 2 -->
            <device title="Tivo Series 2" icon="tivo" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone Screen">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>
            
            <!-- Tivo Series 3 -->
            <device title="Tivo Series 3" icon="tivo" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone Screen">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>

            <!-- 3g Cell Phones -->
            <device title="3g Cell Phones" icon="3g" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone Screen">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>
        </device_group>


        <!--
        
            Game Systems Group
            
        -->
        <device_group title="Game Systems">
            <common_device>
                <command id="ffmpeg_single_pass_options">
                    $ffmpeg_profile
                </command>
                <command id="ffmpeg_pass1_options">
                    -pass 1 -passlogfile "$pass_log_file" $ffmpeg_profile
                </command>
                <command id="ffmpeg_pass2_options">
                    -pass 2 -passlogfile "$pass_log_file" $ffmpeg_profile
                </command>
                <command id="ffmpeg_options">
                    -vcodec $ffmpeg_vcodec  -r $(video_frame_rate)
                    -s $(output_video_width)x$(output_video_height) $padding -b $output_video_bitrate $gop_size $qmin -async 50
                    -acodec $ffmpeg_acodec -ar $output_audio_sample_rate $extras $forceFormat
                </command>
                <command id="quicktime_to_audio_file">
                    $qt_export "$input_file" --video=0 "$tmp_audio_file"
                </command>
                <command id="correct_yuv">
                    $yuvcorrect -v 0 -Y LUMINANCE_1.20_0_255_0_255 -Y CHROMINANCE_0_1.04_128_1.04_128_0_255
                </command>
                <command id="quicktime_to_yuv">
                    $movtoy4m -f -w $input_video_width -h $input_video_height -F $(output_video_frame_rate) 
                        -a $(output_video_width):$(output_video_height) "$input_file" | $correct_yuv 
                </command>
				<!-- Modified by ebj -->
                <command id="thumbnail">
					-f mjpeg -ss 15 -vframes 1 -s 160x120 -an "$output_file_without_extension.THM" 
                </command>
                <command id="createthumbnail">
                    $ffmpeg_thumbnail $thumbnail
                </command>
				<!-- End of modification -->
                <script>
                    <![CDATA[
    
                    // At this point, we know what 2 quality stops we are between (params.quality_stop 
                    // and params.quality_stop+1) and we know what percentage of the way between the 
                    // two we are (params.quality). We also which device we have selected (params.title), 
                    // whether we are doing h.264 or mpeg4 (params.h264), and whether we want to optimize 
                    // for TV or iPod (params.for_tv). From this we need to compute params.frame_width,
                    // params.frame_height, params.audio_quality and params.output_video_bitrate.
                    
                    // We support a number of standard frame sizes. After adjusting these sizes according to the flags
                    // (h264, forTV), we determine the actual frame size using these as maximum values, taking
                    // into account aspect ratio.
                    var frameSizes = {
                        "tiny":  [  192,  144 ],
                        "small": [  320,  240 ],
                        "iphone":[  480,  320 ],
                        "sdef":  [  720,  480 ],
                        "idef":  [ 1280,  720 ],
                        "hdef":  [ 1920, 1080 ]
                    };
                    
                    var deviceFrameSizeMap = {
                        //                              0           1           2           3           4
                        "PSP":                  [   "small",    "iphone",   "sdef",     "sdef",     "sdef" ]
                    };
                    
                    var bitrateQualityMap = {
                        //                          mp4                             FW3                             Old
                        "PSP":                  [ [ 250,  400,  500,  600,  700 ], [ 300,  600,  900, 1200, 1400 ], [ 150,  275,  400,  600,  700 ] ]
                    };
                    
                    var audioQualityMap = {
                        //                          0           1           2           3           4
                        "PSP":                  [   "low",      "high",     "high",     "high",     "high" ]
                    };
                    
                    var levelMap = {
                        //                          0   1   2   3   4
                        "PSP":                  [   20, 30, 30, 30, 30 ]
                    };
                    
                    var qminMap = {
                        //                          0   1   2   3   4
                        "PSP":                  [ [  7,  8,  5,  3,  0 ], [ 29, 31, 27, 23,  8 ] ]
                    };

                    var title = params.title;
                    var qualityStop = number(params.quality_stop);
                    var quality = number(params.quality);
                    var region = bool(params.format);
                    var h264 = bool(params.h264);
                    var thumb = bool(params.thumb);
                    var FW3 = bool(params.FW3);
                    
                    // set bitrate
                    if(title == "PSP") {
                        if(bool(params.h264)) {
                            var index = (1) + (FW3 ? 0 : 1);
                            var bitrateMin = bitrateQualityMap[title][index][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                        }else{
                            var bitrateMin = bitrateQualityMap[title][1][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                        }
                    }
                    
                    // set frame size
                    
                    //var sizeString = deviceFrameSizeMap[title][index][qualityStop];
                    //params.frame_width = frameSizes[sizeString][0];
                    //params.frame_height = frameSizes[sizeString][1];
                    
                    if(title == "PSP") {
                        if(bool(params.FW3)) {
                            if(qualityStop == "0") {
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "";
                                    params.output_video_width = "320";
                                    params.output_video_height = "240";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "";
                                    params.output_video_width = "320";
                                    params.output_video_height = "176";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "";
                                    params.output_video_width = "320";
                                    params.output_video_height = "144";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "320";
                                    params.output_video_height = "240";
                                }
                            }else{
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "-padleft 56 -padright 56";
                                    params.output_video_width = "368";
                                    params.output_video_height = "272";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "";
                                    params.output_video_width = "480";
                                    params.output_video_height = "272";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "-padtop 32 -padbottom 32";
                                    params.output_video_width = "480";
                                    params.output_video_height = "208";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "320";
                                    params.output_video_height = "240";
                                }
                            }
                        }else if(!bool(params.FW3)) {
                            if(qualityStop == "0") {
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "";
                                    params.output_video_width = "240";
                                    params.output_video_height = "176";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "";
                                    params.output_video_width = "240";
                                    params.output_video_height = "128";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "";
                                    params.output_video_width = "240";
                                    params.output_video_height = "96";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "240";
                                    params.output_video_height = "176";
                                }
                            }else{
                                if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "";
                                    params.output_video_width = "368";
                                    params.output_video_height = "208";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "";
                                    params.output_video_width = "416";
                                    params.output_video_height = "176";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "320";
                                    params.output_video_height = "240";
                                }
                            }
                        }
                    }
                    
                    //Set Qmin  
                    if(title == "PSP") {
                        if(bool(params.h264)) {
                            var index = (FW3 ? 1 : 0);
                            params.qmin = "-qmin " + qminMap[title][index][qualityStop];
                        }else{
                            params.qmin = "";
                        }
                    }
                        
                    adjustVideoParams();

                    // set endoder
                        
                    // The level is not necessarily accurate
                    params.output_video_profile_name = (title != "Apple TV") ? "baseline" : "main";
                    params.output_video_level_name = levelMap[title][qualityStop];

                    // construct the recipe
                    if( bool(params.thumb)){
                        if (     !bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$normal_single_pass ; $createthumbnail";
                        else if (!bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$normal_pass1 ; $normal_pass2 ; $createthumbnail";
                        else if (!bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$normal_single_pass ; $createthumbnail";
                        else if (!bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$normal_pass1 ; $normal_pass2 ; $createthumbnail";
                        else if (bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$quicktime_v_single_pass ; $createthumbnail";
                        else if (bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$quicktime_v_pass1 ; $quicktime_v_pass2 ; $createthumbnail";
                        else if (bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$quicktime_to_audio_file ; $quicktime_av_single_pass ; $createthumbnail";
                        else if (bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$quicktime_to_audio_file ; $quicktime_av_pass1 ; $quicktime_av_pass2 ; $createthumbnail";
                    }else{
                        if (     !bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$normal_single_pass";
                        else if (!bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$normal_pass1 ; $normal_pass2";
                        else if (!bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$normal_single_pass";
                        else if (!bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$normal_pass1 ; $normal_pass2";
                        else if (bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$quicktime_v_single_pass";
                        else if (bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$quicktime_v_pass1 ; $quicktime_v_pass2";
                        else if (bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                            params.recipe = "$quicktime_to_audio_file ; $quicktime_av_single_pass";
                        else if (bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                            params.recipe = "$quicktime_to_audio_file ; $quicktime_av_pass1 ; $quicktime_av_pass2";
                    }

                    ]]>
                </script>
            </common_device>
            <!-- XBox 360 -->
            <device title="XBox 360" icon="xbox360" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
            </device>
            
            <!-- PSP -->
            <device title="PSP" icon="psp" enabled="true">
                <checkbox which="0" title="Generar diapositiva">
                    <checked_item>
                        <param id="thumb" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="thumb" value="false" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="1" title="Codific. AVC">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                        <param id="extras" value="-sc_threshold 40 -partitions partp4x4 -rc_eq 'blurCplx^(1-qComp)' -refs 1 -coder 1 -level 21 -qmax 51 -bf 1" />
                        <param id="h264" value="true" />
                        <param id="output_video_codec_name" value="H.264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                        <params id="extras" value="" />
                        <param id="h264" value="false" />
                        <param id="output_video_codec_name" value="MPEG-4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Revisión:">
                    <menu_item title="Todas las PSP">
                        <param id="FW3" value="false" />
                    </menu_item>
                    <menu_item title="Firmware 3.30+">
                        <param id="FW3" value="true" />
                    </menu_item>
                </menu>
                <param id="output_format_name" value="MPEG-4" />
                <param id="video_frame_rate" value="ntsc" />
                <param id="forceFormat" value="-f psp" />
                <param id="gop_size" value="-g 300" />
                <param id="ffmpeg_acodec" value="libfaac" />
                <param id="output_audio_codec_name" value="AAC" />
            </device>
            
            <!-- Playstation 3 -->
            <device title="Playstation 3" icon="ps3" enabled="true">
                 <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone Screen">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>
            
            <!-- Nintendo Wii -->
            <device title="Nintendo Wii" icon="wii" enabled="true">
                 <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone Screen">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>
        </device_group>


        <!--
        
            Generic Formats Group
            
        -->
        <device_group title="Generic Formats">
            <common_device>
                <command id="ffmpeg_single_pass_options">
                    $ffmpeg_profile
                </command>
                <command id="ffmpeg_pass1_options">
                    -pass 1 -passlogfile "$pass_log_file" $ffmpeg_profile
                </command>
                <command id="ffmpeg_pass2_options">
                    -pass 2 -passlogfile "$pass_log_file" $ffmpeg_profile
                </command>
                <command id="ffmpeg_options">
                    $dashtarget $target -s $(output_video_width)x$(output_video_height) -r $fps $aspect $padding
                    $dashv $ffmpeg_vcodec $pixfmt $tag $gop_size $qmin $dashb $output_video_bitrate $k56 $extras -async 50 -acodec $ffmpeg_acodec
                    -ar $output_audio_sample_rate -ac $output_audio_channels -ab $output_audio_bitrate $vob
                </command>
                <command id="quicktime_to_audio_file">
                    $qt_export "$input_file" --video=0 "$tmp_audio_file"
                </command>
                <command id="correct_yuv">
                    $yuvcorrect -v 0 -Y LUMINANCE_1.20_0_255_0_255 -Y CHROMINANCE_0_1.04_128_1.04_128_0_255
                </command>
                <command id="quicktime_to_yuv">
                    $movtoy4m -f -w $input_video_width -h $input_video_height -F $(output_video_frame_rate) 
                        -a $(output_video_width):$(output_video_height) "$input_file" | $correct_yuv 
                </command>
                <script>
                    <![CDATA[
    
                    // At this point, we know what 2 quality stops we are between (params.quality_stop and params.quality_stop+1)
                    // and we know what percentage of the way between the two we are (params.quality). We also which device we have 
                    // selected (params.title), whether we are doing h.264 or mpeg4 (params.h264), and whether we want to optimize 
                    // for TV or iPod (params.for_tv). From this we need to compute params.frame_width, params.frame_height,
                    // params.audio_quality and params.output_video_bitrate.
                    
                    // We support a number of standard frame sizes. After adjusting these sizes according to the flags
                    // (h264, forTV), we determine the actual frame size using these as maximum values, taking
                    // into account aspect ratio.
                    var frameSizes = {
                        "tiny":  [  240,  180 ],
                        "small": [  720,  480 ],
                        "iphone":[  720,  480 ],
                        "sdef":  [  720,  480 ],
                        "idef":  [  720,  480 ],
                        "hdef":  [  720,  480 ]
                    };
                    
                    var deviceFrameSizeMap = {
                        //                              0           1           2           3           4
                        "AVI":                      [   "tiny",     "iphone",   "sdef",     "sdef",     "hdef" ],   // mp4 && for iPod
                        "MP4":                      [   "tiny",     "small",    "small",    "small",    "small" ],  // mp4 && for iPod
                        "WMV":                      [   "tiny",     "small",    "iphone",   "iphone",   "iphone" ]
                    };
                    
                    var bitrateQualityMap = {
                        "AVI":                  [ [  987, 1382, 2304, 3456,  3800 ], [ 219,  307,  512,  768, 1536 ] ],
                        "MP4":                  [ [   32, 1728, 2304, 3456,  6912 ], [  32, 1382, 1728, 2304, 3456 ], 
                                                  [   32,  384,  512,  768,  1536 ], [  32,  307,  384,  512,  768 ] ],
                        "WMV":                  [ [   20, 1440, 1975, 2880,  5760 ], [  20,  320,  439,  640, 1280 ] ],
                        "MPEG":                 [ [ 1382, 2304, 3456, 4937, 11520 ], [  20,  320,  439,  640, 1280 ] ]
                    };
                    
                    var audioQualityMap = {
                        //                          0           1           2           3           4
                        "AVI":                  [   "avi",      "avi",      "avi",      "avi",      "avi"  ],
                        "MP4":                  [   "mp4Low",   "high",     "high",     "high",     "high" ],
                        "WMV":                  [   "wmvlow",   "wmv",      "wmv",      "wmv",      "wmv"  ],
                        "Flash":                [   "low",      "wmv",      "wmv",      "wmv",      "wmv"  ]
                    };
                    
                    var levelMap = {
                        //                          0   1   2   3   4
                        "AVI":                  [   20, 30, 30, 30, 30 ],
                        "MP4":                  [   20, 30, 30, 30, 30 ],
                        "WMV":                  [   20, 30, 30, 30, 30 ]
                    };
                    
                    var qminMap = {
                        //                          0   1   2   3   4
                        "AVI":                  [    9,  7,  5,  3,  2 ],
                        "MP4":                  [    8,  7,  5,  3,  0 ],
                        "WMV":                  [    9,  8,  7,  6,  3 ],
                        "MPEG":                 [    5,  7,  5,  3,  0 ],
                        "Flash":                [    8,  7,  5,  3,  2 ]
                    };
                    
                    var mpegbitrateQualityMap = {
                        "none":                   [ 1382, 2304, 3456, 4937, 11520 ],
                        "svcd":                 [ [  922, 1536, 2304, 3291,  7680 ], [ 1106,  1843,  2765,  3950, 9216 ] ],
                        "cvd":                  [ [  676, 1126, 1690, 2414,  5632 ], [  811,  1352,  2028,  2896, 6758 ] ],
                        "tivo":                   [  676, 1536, 2611, 3730, 11520 ],
                        "ts":                   [ [  676, 1126, 1690, 2414,  5632 ], [  811,  1352,  2028,  2896, 6758 ] ]
                    };
                    
                    var mpegMaxrateMap = {
                        //                          0   1   2   3   4
                        "mpeg":                 [ 2764,  4608,  6912, 9874,  23040 ]
                    };
                    
                    var mpegbufsizeMap = {
                        //                          0   1   2   3   4
                        "mpeg":                 [  461,   768,  1152, 1646,  3840 ]
                    };
                    
                    var mpegAudioQualityMap = {
                        //                          0           1           2           3           4
                        "mpeg":                 [   "low",      "high",     "high",     "high",     "high"  ],
                        "svcd":                 [   "svcd",     "svcd",     "svcd",     "svcd",     "svcd"  ]
                    };
                    
                    var qualsetMap = {
                        //                          0           1           2           3           4
                        "Flash":                [   "",         "350",      "250",      "150",      "100"  ],
                        "WMV":                  [   "",         "240",      "175",      "120",       "60"  ]
                    };


                    var title = params.title;
                    var qualityStop = number(params.quality_stop);
                    var quality = number(params.quality);
                    var h264 = bool(params.h264);
                    var forTV = bool(params.forTV);
                    var wide = bool(params.wide);
                    var format = bool(params.format);
                    var mpeg2 = bool(params.mpeg2);
                    
                    // set bitrate
                    if(title == "MP4") {
                        var index = (h264 ? 2 : 0) + (wide ? 1 : 0);
                        var bitrateMin = bitrateQualityMap[title][index][qualityStop] * 1000;
                        params.output_video_bitrate = bitrateMin;
                    }else if(title == "MPEG") {
                        if(params.profile == "none") {
                            var bitrateMin = mpegbitrateQualityMap[params.profile][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                            params.dashb = "-b";
                        }else if(params.profile == "vcd") {
                            params.output_video_bitrate = "";
                            params.dashb = "";
                        }else if(params.profile == "svcd") {
                            var bitrateMin = mpegbitrateQualityMap[params.profile][format ? 1 : 0][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                            params.dashb = "-b";
                        }else if(params.profile == "cvd") {
                            var bitrateMin = mpegbitrateQualityMap[params.profile][format ? 1 : 0][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                            params.dashb = "-b";
                        }else if(params.profile == "tivo") {
                            var bitrateMin = mpegbitrateQualityMap[params.profile][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                            params.dashb = "-b";
                        }else if(params.profile == "ts") {
                            var bitrateMin = mpegbitrateQualityMap[params.profile][format ? 1 : 0][qualityStop] * 1000;
                            params.output_video_bitrate = bitrateMin;
                            params.dashb = "-b";
                        }else if(params.profile == "720" || params.profile == "1080") {
                            var bitrateMin = "18500";
                            params.output_video_bitrate = bitrateMin;
                            params.dashb = "-b";
                        }
                    }else if(title == "Flash") {
                        if(qualityStop == "0")  {
                            params.output_video_bitrate = "30000";
                        }else{                  
                            var qualset = qualsetMap[title][qualityStop];
                            var br = Math.round(((params.input_video_width) * (params.input_video_height)) / qualset);
                            params.output_video_bitrate = (br) * 1000;
                        
                        }
                    }else if(title == "WMV") {
                        if(qualityStop == "0")  {
                            params.output_video_bitrate = "20000";
                        }else{                  
                            var qualset = qualsetMap[title][qualityStop];
                            var br = Math.round(((params.input_video_width) * (params.input_video_height)) / qualset);
                            params.output_video_bitrate = (br) * 1000;
                        
                        }
                    }else{
                        var bitrateMin = bitrateQualityMap[title][wide ? 1 : 0][qualityStop] * 1000;
                        params.output_video_bitrate = bitrateMin;
                    }
                            
                    // set qmin
                    if(title == "MP4") {
                        if(qualityStop == "4") {
                            params.qmin = "";
                        }else{
                        var qminn = qminMap[title][qualityStop];
                        params.qmin = "-qmin " + (qminn);
                        }
                    }else if(title == "MPEG") {
                        if(qualityStop == "4" && params.profile == "none" || params.profile == "svcd" || 
                                params.profile == "cvd" || params.profile == "tivo" || params.profile == "ts") {
                            params.qmin = "-bf 2";
                        }else if(params.profile == "vcd") {
                            params.qmin = "-qmin 5 -bf 2";
                        }else if(params.profile == "1080" || params.profile == "720") {
                            params.qmin = "";
                        }else{
                            var qminn = qminMap[title][qualityStop];
                            params.qmin = "-qmin " + qminn + " -bf 2";
                        }
                    }else{
                        var qminn = qminMap[title][qualityStop];
                        params.qmin = "-qmin " + qminn;
                    }
                    
                    // set frame size
                    if(title == "AVI") {
                        if(bool(params.wide)) {
                            params.frame_width = 320;
                        }else{
                            if(qualityStop == "0") {
                                var sizeString = deviceFrameSizeMap[title][qualityStop];
                                params.frame_width = frameSizes[sizeString][0];
                                params.frame_height = frameSizes[sizeString][1];
                            }else{
                                params.frame_width = params.input_video_width;
                                params.frame_height = params.input_video_height;
                            }
                        }
                    }else if(title == "MP4") {
                        if(bool(params.wide)) {
                            params.frame_width = 320;
                        }else{
                            if(qualityStop == "0") {
                                var sizeString = deviceFrameSizeMap[title][qualityStop];
                                params.frame_width = frameSizes[sizeString][0];
                                params.frame_height = frameSizes[sizeString][1];
                            }else{
                                params.frame_width = params.input_video_width;
                                params.frame_height = params.input_video_height;
                            }
                        }
                    }else if(title == "WMV") {
                        if(qualityStop == "0") {
                            params.frame_width = "240";
                            params.extras = "-maxrate 24k -bufsize 5k -g 30";
                        }else if(bool(params.wide)) {
                            params.frame_width = "320";
                            params.extras = "";
                        }else{
                            params.frame_width = params.input_video_width;
                            params.frame_height = params.input_video_height;
                            params.extras = "";
                        }
                    }else if(title == "MPEG") {
                        
                    }else if(title == "Flash") {
                        if(qualityStop == "0") {
                            params.frame_width = "240";
                            params.extras = "-maxrate 34k -bufsize 5k -g 30";
                        }else if(bool(params.wide)) {
                            params.frame_width = "320";
                            params.extras = "";
                        }else{
                            params.frame_width = params.input_video_width;
                            params.frame_height = params.input_video_height;
                            params.extras = "";
                        }
                    }

                    
                    // 56k Format?
                    if(qualityStop == "0" && title == "MP4") {
                        params.k56 = "-maxrate 40k -bufsize 5k -g ntsc";
                        params.fps = "10";
                    }else if(qualityStop == "0" && title == "WMV") {
                        params.k56 = "-maxrate 24k -bufsize 5k -g 30";
                        params.fps = "10";
                    }else{
                        params.k56 = "";
                    }
                    
                    if(title == "MPEG") {
                        params.fps = format ? "ntsc" : "pal";
                        if(params.profile == "720" || params.profile == "1080") {
                            mpegaudio("hd");
                            params.aspect = "-aspect 16:9";
                            if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5" && params.profile == "720") {
                                params.padding = "-padleft 160 -padright 160";
                                params.output_video_width = "960";
                                params.output_video_height = "720";
                            }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9" && params.profile == "720") {
                                params.padding = "";
                                params.output_video_width = "1280";
                                params.output_video_height = "720";
                            }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5" && params.profile == "720") {
                                params.padding = "-padleft 80 -padright 96";
                                params.output_video_width = "1280";
                                params.output_video_height = "544";
                            }else if(params.profile == "720") {
                                params.padding = "";
                                params.output_video_width = "1280";
                                params.output_video_height = "720";
                            }else if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5" && params.profile == "1080") {
                                params.padding = "-padleft 240 -padright 240";
                                params.output_video_width = "1440";
                                params.output_video_height = "1080";
                            }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9" && params.profile == "1080") {
                                params.padding = "";
                                params.output_video_width = "1920";
                                params.output_video_height = "1080";
                            }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5" && params.profile == "1080") {
                                params.padding = "-padleft 128 -padright 136";
                                params.output_video_width = "1920";
                                params.output_video_height = "816";
                            }else if(params.profile == "1080") {
                                params.padding = "";
                                params.output_video_width = "1920";
                                params.output_video_height = "1080";
                            }
                        }else if(params.profile == "none") {
                            mpegaudio(mpegAudioQualityMap["mpeg"][qualityStop]);
                            params.frame_width = params.input_video_width;
                            params.frame_height = params.input_video_height;
                            if(bool(params.mpeg2)) {
                                params.ffmpeg_vcodec = "mpeg2video";
                                params.aspect = "";
                            }else{
                                params.ffmpeg_vcodec = "mpeg1video";
                                params.aspect = "-aspect " + params.input_video_width + ":" + params.input_video_height;
                            }
                        }else if(params.profile == "vcd") {
                            mpegaudio("vcd");
                            params.aspect = "-aspect 4:3";
                            if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                params.padding = "";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "240" : "288";
                            }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                params.padding = format ? "-padtop 32 -padbottom 32" : "-padtop 48 -padbottom 48";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "176" : "192";
                            }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                params.padding = format ? "-padtop 48 -padbottom 48" : "-padtop 64 -padbottom 64";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "144" : "160";
                            }else{
                                params.padding = "";
                                params.output_video_width = "352";
                                params.output_video_height = "240";
                            }
                        }else if(params.profile == "svcd") {
                            mpegaudio("svcd");
                            params.aspect = "-aspect 4:3";
                            if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                params.padding = "";
                                params.output_video_width = "480";
                                params.output_video_height = format ? "480" : "576";
                            }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                params.padding = "-padtop 64 -padbottom 64";
                                params.output_video_width = "480";
                                params.output_video_height = format ? "352" : "448";
                            }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                params.padding = format ? "-padtop 96 -padbottom 112" : "-padtop 112 -padbottom 112";
                                params.output_video_width = "480";
                                params.output_video_height = format ? "272" : "352";
                            }else{
                                params.padding = "";
                                params.output_video_width = "480";
                                params.output_video_height = format ? "480" : "576";
                            }
                        }else if(params.profile == "cvd") {
                            mpegaudio("high");
                            params.aspect = "-aspect 4:3";
                            if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                params.padding = "";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "480" : "576";
                            }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                params.padding = "-padtop 64 -padbottom 48";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "352" : "448";
                            }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                params.padding = format ? "-padtop 96 -padbottom 112" : "-padtop 112 -padbottom 112";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "272" : "352";
                            }else{
                                params.padding = "";
                                params.output_video_width = "352";
                                params.output_video_height = format ? "480" : "576";
                            }
                        }else if(params.profile == "tivo") {
                            mpegaudio("high");
                            params.aspect = "-aspect 4:3";
                            if(qualityStop == "0") {
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "";
                                    params.output_video_width = "352";
                                    params.output_video_height = "480";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "-padtop 64 -padbottom 64";
                                    params.output_video_width = "352";
                                    params.output_video_height = "352";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "-padtop 96 -padbottom 112";
                                    params.output_video_width = "352";
                                    params.output_video_height = "272";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "352";
                                    params.output_video_height ="480";
                                }
                            }else if(qualityStop == "1") {
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "";
                                    params.output_video_width = "480";
                                    params.output_video_height = "480";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "-padtop 64 -padbottom 64";
                                    params.output_video_width = "480";
                                    params.output_video_height = "352";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "-padtop 96 -padbottom 112";
                                    params.output_video_width = "480";
                                    params.output_video_height = "272";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "480";
                                    params.output_video_height = "480";
                                }
                            }else if(qualityStop == "2" || qualityStop == "3") {
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "";
                                    params.output_video_width = "544";
                                    params.output_video_height = "480";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "-padtop 64 -padbottom 64";
                                    params.output_video_width = "544";
                                    params.output_video_height = "352";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "-padtop 96 -padbottom 112";
                                    params.output_video_width = "544";
                                    params.output_video_height = "272";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "544";
                                    params.output_video_height = "480";
                                }
                            }else if(qualityStop == "4") {
                                if(params.input_video_aspect >= "1.2" && params.input_video_aspect <= "1.5") {
                                    params.padding = "";
                                    params.output_video_width = "720";
                                    params.output_video_height = "480";
                                }else if(params.input_video_aspect >= "1.6" && params.input_video_aspect <= "1.9") {
                                    params.padding = "-padtop 64 -padbottom 64";
                                    params.output_video_width = "720";
                                    params.output_video_height = "352";
                                }else if(params.input_video_aspect >= "2" && params.input_video_aspect <= "2.5") {
                                    params.padding = "-padtop 96 -padbottom 112";
                                    params.output_video_width = "720";
                                    params.output_video_height = "272";
                                }else{
                                    params.padding = "";
                                    params.output_video_width = "720";
                                    params.output_video_height = "480";
                                }
                            }
                        }else if(params.profile == "ts") {
                            mpegaudio("high");
                            params.aspect = "-aspect 4:3";
                            params.output_video_width = "352";
                            params.output_video_height = format ? "480" : "576";
                            params.padding = "";
                        }
                        

                        if(params.profile == "vcd") {
                            params.dashtarget = "-target";
                            params.target = format ? "ntsc-vcd" : "pal-vcd";
                        }else{
                            params.dashtarget = "";
                            params.target = "";
                        }
                    }else{
                        params.padding = "";
                    }
                    
                    // Set up MPEG Extras
                    if(title == "MPEG") {
                        if(params.profile == "none") {
                            if(bool(params.mpeg2)) {
                                params.extras = "";
                                params.ffmpeg_vcodec = "mpeg2video";
                                params.output_video_codec_name = "MPEG-2";
                            }else{
                                var ratemax = mpegMaxrateMap["mpeg"][qualityStop];
                                var bufsize = mpegbufsizeMap["mpeg"][qualityStop];
                                params.extras = "-maxrate " + ratemax + " -bufsize " + bufsize;
                                params.ffmpeg_vcodec = "mpeg1video";
                                params.output_video_codec_name = "MPEG-1";
                            }
                        }
                    }
                    
                    adjustVideoParams();
                    
                    // set audio quality
                    if(title == "MPEG") {

                    }else{
                        audio(audioQualityMap[title][qualityStop]);
                    }
                        
                    // The level is not necessarily accurate
                    params.output_video_profile_name = (title != "Apple TV") ? "baseline" : "main";
                    //params.output_video_level_name = levelMap[title][qualityStop];

                    // construct the recipe
                    if (     !bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$normal_single_pass";
                    else if (!bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$normal_pass1 ; $normal_pass2";
                    else if (!bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$normal_single_pass";
                    else if (!bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$normal_pass1 ; $normal_pass2";
                    else if (bool(params.special_qt) && !bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$quicktime_v_single_pass";
                    else if (bool(params.special_qt) && !bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$quicktime_v_pass1 ; $quicktime_v_pass2";
                    else if (bool(params.special_qt) && bool(params.has_audio) && !bool(params.is_2_pass))
                        params.recipe = "$quicktime_to_audio_file ; $quicktime_av_single_pass";
                    else if (bool(params.special_qt) && bool(params.has_audio) && bool(params.is_2_pass))
                        params.recipe = "$quicktime_to_audio_file ; $quicktime_av_pass1 ; $quicktime_av_pass2";

                    ]]>
                </script>
            </common_device>
            <!-- AVI -->
            <!-- AVI -->
            <device title="AVI" icon="file" enabled="true">
                <checkbox which="0" title="320 Pixels Wide">
                    <checked_item>
                        <param id="wide" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="wide" value="false" />
                    </unchecked_item>
                </checkbox>
                <param id="ffmpeg_vcodec" value="mpeg4" />
                <param id="ffmpeg_acodec" value="libmp3lame" />
                <param id="video_suffix" value="avi" />
                <param id="output_audio_bitrate" value="128000" />
                <param id="output_audio_sample_rate" value="44100" />
                <param id="output_audio_channels" value="2" />
                <param id="gop_size" value="-g 200" />
                <param id="extras" value="" />
                <param id="tag" value="-vtag DX50" />
                <param id="pixfmt" value="" />
                <param id="output_format_name" value="AVI" />
                <param id="output_video_codec_name" value="MPEG-4" />
                <param id="output_audio_codec_name" value="MP3" />
                <param id="vob" value="" />
                <param id="fps" value="ntsc" />
                <param id="dashb" value="-b" />
                <param id="target" value="" />
                <param id="dashv" value="-vcodec" />
                <param id="dashtarget" value="" />
            </device>
            
            <!-- MP4 -->
            <device title="MP4" icon="file" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                        <param id="output_video_codec_name" value="H.264" />
                        <param id="extras" 
                            value="-bf 1 -level 41 -sc_threshold 40 -partitions partp4x4 -rc_eq 'blurCplx^(1-qComp)' -refs 3  -qmax 51" />
                        <param id="h264" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                        <param id="output_video_codec_name" value="MPEG-4" />
                        <param id="extras" value="" />
                        <param id="h264" value="false" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="1" title="320 Pixels Wide">
                    <checked_item>
                        <param id="wide" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="wide" value="false" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="2" title="RTSP Streaming">
                    <checked_item>
                        <param id="gop_size" value="-g 50" />
                    </checked_item>
                    <unchecked_item>
                        <param id="gop_size" value="-g 200" />
                    </unchecked_item>
                </checkbox>
                <param id="tag" value="" />
                <param id="pixfmt" value="" />
                <param id="output_format_name" value="MPEG-4" />
                <param id="output_audio_codec_name" value="MP3" />
                <param id="vob" value="" />
                <param id="dashb" value="-b" />
                <param id="target" value="" />
                <param id="dashv" value="-vcodec" />
                <param id="dashtarget" value="" />
            </device>
            
            <!-- QuickTime -->
            <device title="QuickTime" icon="file" enabled="true">
                <checkbox which="0" title="H.264 Video">
                    <checked_item>
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </checked_item>
                    <unchecked_item>
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Mejor para:">
                    <menu_item title="iPhone Screen">
                        <param id="ffmpeg_vcodec" value="libx264" />
                    </menu_item>
                    <menu_item title="TV Screen">
                        <param id="ffmpeg_vcodec" value="mpeg4" />
                    </menu_item>
                </menu>
            </device>
            
            <!-- WMV -->
            <device title="WMV" icon="wma" enabled="true">
                <checkbox which="0" title="320 Pixels Wide">
                    <checked_item>
                        <param id="wide" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="wide" value="false" />
                    </unchecked_item>
                </checkbox>
                <param id="ffmpeg_vcodec" value="wmv1" />
                <param id="ffmpeg_acodec" value="wmav2" />
                <param id="gop_size" value="-g 15" />
                <param id="extras" value="" />
                <param id="tag" value="" />
                <param id="pixfmt" value="-pix_fmt yuv420p" />
                <param id="video_suffix" value="wmv" />
                <param id="output_format_name" value="ASF" />
                <param id="output_video_codec_name" value="WMV" />
                <param id="output_audio_codec_name" value="WMA" />
                <param id="vob" value="" />
                <param id="dashb" value="-b" />
                <param id="target" value="" />
                <param id="dashv" value="-vcodec" />
                <param id="dashtarget" value="" />
                <param id="fps" value="ntsc" />
                <param id="aspect" value="" />
            </device>

            <!-- Flash -->
            <device title="Flash" icon="flash" enabled="true">
                <checkbox which="0" title="320 Pixels Wide">
                    <checked_item>
                        <param id="wide" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="wide" value="false" />
                    </unchecked_item>
                </checkbox>
                <checkbox which="1" title="Raw .flv Format">
                    <checked_item>
                        <param id="video_suffix" value="flv" />
                    </checked_item>
                    <unchecked_item>
                        <param id="video_suffix" value="swf" />
                    </unchecked_item>
                </checkbox>
                <param id="dashtarget" value="" />
                <param id="target" value="" />
                <param id="fps" value="ntsc" />
                <param id="padding" value="" />
                <param id="aspect" value="" />
                <param id="dashv" value="" />
                <param id="ffmpeg_vcodec" value="" />
                <param id="pixfmt" value="" />
                <param id="tag" value="" />
                <param id="dashb" value="-b" />
                <param id="ffmpeg_acodec" value="libmp3lame" />
                <param id="gop_size" value="-g 300" />
                <param id="vob" value="" />
            </device>
            
            <!-- MPEG -->
            <device title="MPEG" icon="file" enabled="true">
                 <checkbox which="0" title="MPEG-2">
                    <checked_item>
                        <param id="vob" value="-f vob" />
                        <param id="mpeg2" value="true" />
                    </checked_item>
                    <unchecked_item>
                        <param id="vob" value="" />
                        <param id="mpeg2" value="false" />
                    </unchecked_item>
                </checkbox>
                <menu which="0" title="Format:">
                    <menu_item title="NTSC">
                        <param id="format" value="true" />
                    </menu_item>
                    <menu_item title="PAL">
                        <param id="format" value="false" />
                    </menu_item>
                </menu>
                <menu which="1" title="Profile:">
                    <menu_item title="None">
                        <param id="profile" value="none" />
                        <param id="dashv" value="-vcodec" />
                        <param id="video_suffix" value="mpg" />
                        <param id="ffmpeg_acodec" value="mp2" />
                        <param id="output_audio_codec_name" value="MP2" />
                    </menu_item>
                    <menu_item title="VCD">
                        <param id="profile" value="vcd" />
                        <param id="ffmpeg_acodec" value="mp2" />
                        <param id="ffmpeg_vcodec" value="" />
                        <param id="output_video_codec_name" value="MPEG-1" />
                        <param id="output_audio_codec_name" value="MP2" />
                        <param id="dashv" value="" />
                        <param id="video_suffix" value="mpg" />
                    </menu_item>
                    <menu_item title="SVCD">
                        <param id="profile" value="svcd" />
                        <param id="ffmpeg_acodec" value="mp2" />
                        <param id="ffmpeg_vcodec" value="" />
                        <param id="output_video_codec_name" value="MPEG-2" />
                        <param id="output_audio_codec_name" value="MP2" />
                        <param id="dashv" value="" />
                        <param id="video_suffix" value="mpg" />
                    </menu_item>
                    <menu_item title="CVD">
                        <param id="profile" value="cvd" />
                        <param id="ffmpeg_acodec" value="mp2" />
                        <param id="ffmpeg_vcodec" value="mpeg2video" />
                        <param id="output_video_codec_name" value="MPEG-2" />
                        <param id="output_audio_codec_name" value="MP2" />
                        <param id="dashv" value="-vcodec" />
                        <param id="video_suffix" value="mpg" />
                    </menu_item>
                    <menu_item title="TiVo">
                        <param id="profile" value="tivo" />
                        <param id="ffmpeg_acodec" value="mp2" />
                        <param id="ffmpeg_vcodec" value="mpeg2video" />
                        <param id="output_video_codec_name" value="MPEG-2" />
                        <param id="output_audio_codec_name" value="MP2" />
                        <param id="dashv" value="-vcodec" />
                        <param id="video_suffix" value="mpg" />
                    </menu_item>
                    <menu_item title="Transport Stream">
                        <param id="profile" value="ts" />
                        <param id="ffmpeg_acodec" value="ac3" />
                        <param id="video_suffix" value="ts" />
                        <param id="ffmpeg_vcodec" value="mpeg2video" />
                        <param id="output_video_codec_name" value="MPEG-2" />
                        <param id="output_audio_codec_name" value="AC3" />
                        <param id="dashv" value="-vcodec" />
                    </menu_item>
                    <menu_item title="720p">
                        <param id="profile" value="720" />
                        <param id="qmin" value="" />
                        <param id="ffmpeg_acodec" value="ac3" />
                        <param id="video_suffix" value="m2t" />
                        <param id="ffmpeg_vcodec" value="mpeg2video" />
                        <param id="output_video_codec_name" value="MPEG-2" />
                        <param id="output_audio_codec_name" value="AC3" />
                        <param id="dashv" value="-vcodec" />
                    </menu_item>
                    <menu_item title="1080i">
                        <param id="profile" value="1080" />
                        <param id="qmin" value="" />
                        <param id="ffmpeg_acodec" value="ac3" />
                        <param id="video_suffix" value="m2t" />
                        <param id="ffmpeg_vcodec" value="mpeg2video" />
                        <param id="output_video_codec_name" value="MPEG-2" />
                        <param id="output_audio_codec_name" value="AC3" />
                        <param id="dashv" value="-vcodec" />
                    </menu_item>
                </menu>
                <param id="output_format_name" value="MPEG-2" />
                <param id="gop_size" value="-g 15" />
                <param id="pixfmt" value="" />
                <param id="tag" value="" />
            </device>
        </device_group>
    </devices>
</videomonkey>

        